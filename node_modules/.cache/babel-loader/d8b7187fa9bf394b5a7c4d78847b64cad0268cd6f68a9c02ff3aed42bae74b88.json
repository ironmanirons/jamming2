{"ast":null,"code":"import React from'react';import'./App.css';import SearchBar from'../SearchBar/SearchBar.js';import SearchResults from'../SearchResults/SearchResults.js';import Playlist from'../Playlist/Playlist.js';import Spotify from'../../util/Spotify';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";class App extends React.Component{constructor(props){super(props);this.state={SearchResults:[],playlistName:'My Playlist',playlistTracks:[]};this.addTrack=this.addTrack.bind(this);this.removeTrack=this.removeTrack.bind(this);this.updatePlaylistName=this.updatePlaylistName.bind(this);this.savePlaylist=this.savePlaylist.bind(this);this.search=this.search.bind(this);}addTrack(track){let tracks=this.state.playlistTracks;if(tracks.find(savedTrack=>savedTrack.id===track.id)){return;}tracks.push(track);this.setState({playlistTracks:tracks});}removeTrack(track){let tracks=this.state.playlistTracks;tracks=tracks.filter(currentTrack=>currentTrack.id!==track.id);this.setState({playlistTracks:tracks});}updatePlaylistName(name){this.setState({playlistName:name});}savePlaylist(){const trackUris=this.state.playlistTracks.map(track=>track.uri);Spotify.savePlaylist(this.state.playlistName,trackUris).then(()=>{this.setState({playlistName:'New Playlist',playlistTracks:[]});});}search(term){Spotify.search(term).then(searchResults=>{this.setState({searchResults:searchResults});});}render(){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h1\",{children:[\"Ja\",/*#__PURE__*/_jsx(\"span\",{className:\"highlight\",children:\"mmm\"}),\"ing\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(SearchBar,{onSearch:this.search}),/*#__PURE__*/_jsxs(\"div\",{className:\"App-playlist\",children:[/*#__PURE__*/_jsx(SearchResults,{searchResults:this.state.SearchResults,onAdd:this.addTrack}),/*#__PURE__*/_jsx(Playlist,{playlistName:this.state.playlistName,playlistTracks:this.state.playlistTracks,onRemove:this.removeTrack,onNameChange:this.updatePlaylistName,onSave:this.savePlaylist})]})]})]});}}export default App;","map":{"version":3,"names":["React","SearchBar","SearchResults","Playlist","Spotify","jsx","_jsx","jsxs","_jsxs","App","Component","constructor","props","state","playlistName","playlistTracks","addTrack","bind","removeTrack","updatePlaylistName","savePlaylist","search","track","tracks","find","savedTrack","id","push","setState","filter","currentTrack","name","trackUris","map","uri","then","term","searchResults","render","children","className","onSearch","onAdd","onRemove","onNameChange","onSave"],"sources":["C:/Users/steve/Documents/Projects/Jammming/jamming/src/Components/App/App.js"],"sourcesContent":["import React from 'react';\nimport './App.css';\nimport SearchBar from '../SearchBar/SearchBar.js';\nimport SearchResults from '../SearchResults/SearchResults.js';\nimport Playlist from '../Playlist/Playlist.js';\nimport Spotify from '../../util/Spotify';\n\nclass App extends React.Component {\n\nconstructor(props) {\n  super(props);\n\n  this.state = {\n      SearchResults: [],\n    playlistName: 'My Playlist',\n    playlistTracks: []\n    };\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n    this.search = this.search.bind(this);\n  }\n\n  addTrack(track) {\n    let tracks = this.state.playlistTracks;\n    if (tracks.find(savedTrack => savedTrack.id === track.id)) {\n      return;\n    }\n\n    tracks.push(track);\n    this.setState({playlistTracks: tracks})\n  }\n\nremoveTrack(track) {\n  let tracks = this.state.playlistTracks;\n  tracks = tracks.filter(currentTrack => currentTrack.id !== track.id);\n\n  this.setState({ playlistTracks: tracks })\n}\n\nupdatePlaylistName(name) {\n  this.setState({ playlistName: name });\n}\n\nsavePlaylist() {\n  const trackUris = this.state.playlistTracks.map(track => track.uri);\n  Spotify.savePlaylist(this.state.playlistName, trackUris).then(() => {\n    this.setState({\n      playlistName: 'New Playlist',\n      playlistTracks: []\n    })\n  })\n}\n\nsearch(term) {\n  Spotify.search(term).then(searchResults => {\n    this.setState({searchResults: searchResults})\n  })\n}\n\n  render() {\n    return (\n      <div>\n        <h1>Ja<span className=\"highlight\">mmm</span>ing</h1>\n        <div className=\"App\">\n          <SearchBar onSearch={this.search} />\n          <div className=\"App-playlist\">\n            <SearchResults searchResults={this.state.SearchResults} \n              onAdd={this.addTrack} />\n            <Playlist playlistName={this.state.playlistName}\n              playlistTracks={this.state.playlistTracks}\n              onRemove={this.removeTrack}\n              onNameChange={this.updatePlaylistName}\n              onSave={this.savePlaylist} />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}